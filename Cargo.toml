[package]
name = "rust-launcher"
description = "Launch your commands via GUI"
repository = "https://github.com/bircni/rust-launcher"
version = "0.0.1"
authors = ["bircni"]
edition = "2021"
license = "MIT"
readme = "README.md"
categories = ["ui", "gui"]
keywords = ["rust", "launcher", "gui", "ui", "egui"]

[dependencies]
anyhow = "1"
eframe = "0.31"
egui = "0.31"
log = "0.4.25"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
simple-home-dir = "0.4"
simplelog = "0.12.2"

[dev-dependencies]
egui_kittest = { version = "0.31", features = ["wgpu", "snapshot"] }
eframe = { version = "0.31", features = ["wgpu"] }
tokio = { version = "1", features = ["time", "rt", "macros"] }
wgpu = "24"

[build-dependencies]
anyhow = "1"
winresource = "0.1"

[patch.crates-io]
egui = { git = "https://github.com/bircni/egui.git", branch = "feature/set-hint_text"}
epaint = { git = "https://github.com/bircni/egui.git", branch = "feature/set-hint_text"}

[lints.rust]
unsafe_code = "deny"
deprecated = "warn"
elided_lifetimes_in_paths = "warn"
future_incompatible = { level = "warn", priority = -1 }
nonstandard_style = { level = "warn", priority = -1 }
rust_2018_idioms = { level = "warn", priority = -1 }
rust_2021_prelude_collisions = "warn"
semicolon_in_expressions_from_macros = "warn"
trivial_numeric_casts = "warn"
unsafe_op_in_unsafe_fn = "warn"                         # `unsafe_op_in_unsafe_fn` may become the default in future Rust versions: https://github.com/rust-lang/rust/issues/71668
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
trivial_casts = "allow"
unused_qualifications = "allow"

[lints.rustdoc]
all = "warn"
missing_crate_level_docs = "warn"

[lints.clippy]
all = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }

# allows
expect_used = "allow"
cast_possible_truncation = "allow"
cast_possible_wrap = "allow"
cast_sign_loss = "allow"

# Additional lints from https://rust-lang.github.io/rust-clippy/master/index.html?groups=restriction
absolute_paths = "warn"
allow_attributes = "warn"
allow_attributes_without_reason = "warn"
assertions_on_result_states = "warn"
create_dir = "warn"
clone_on_ref_ptr = "warn"
missing_assert_message = "warn"
panic_in_result_fn = "warn"
shadow_reuse = "warn"
str_to_string = "warn"
todo = "warn"
unimplemented = "warn"
unwrap_used = "warn"
wildcard_enum_match_arm = "warn"
